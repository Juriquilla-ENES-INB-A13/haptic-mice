/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void btON_click(GButton source, GEvent event) { //_CODE_:btnOn:661417:
  run=true;
  thread("record");
} //_CODE_:btnOn:661417:

public void stop_click(GButton source, GEvent event) { //_CODE_:btnStop:884228:
run=false;
  openDataFolder();
} //_CODE_:btnStop:884228:

public void dropList1_click(GDropList source, GEvent event) { //_CODE_:portList:459914:
  port = new Serial(this, Serial.list()[portList.getSelectedIndex()], 9600);
} //_CODE_:portList:459914:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Vibr recording");
  btnOn = new GButton(this, 20, 120, 80, 30);
  btnOn.setText("Record");
  btnOn.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  btnOn.addEventHandler(this, "btON_click");
  btnStop = new GButton(this, 210, 120, 80, 30);
  btnStop.setText("Stop");
  btnStop.setLocalColorScheme(GCScheme.RED_SCHEME);
  btnStop.addEventHandler(this, "stop_click");
  portList = new GDropList(this, 10, 10, 280, 60, 2, 10);
  portList.setItems(Serial.list(), 0);
  portList.addEventHandler(this, "dropList1_click");
}

// Variable declarations 
// autogenerated do not edit
GButton btnOn; 
GButton btnStop; 
GDropList portList; 
