/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void btn_newExperiment_click1(GButton source, GEvent event) { //_CODE_:btn_newExperiment:958929:
  println("btn_newExperiment - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:btn_newExperiment:958929:

public void btn_open_experiments_click1(GButton source, GEvent event) { //_CODE_:btn_open_experiments:884610:
  println("btn_open_experiments - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:btn_open_experiments:884610:

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:wnd_experiment_basic:697862:
  appc.background(230);
} //_CODE_:wnd_experiment_basic:697862:

public void bt_fill_click1(GButton source, GEvent event) { //_CODE_:btn_fill:388230:
  println("btn_fill - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:btn_fill:388230:

public void btn_runExperiment_click(GButton source, GEvent event) { //_CODE_:btn_runExperiment:565087:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  println(fld_freq1.getValueI());
} //_CODE_:btn_runExperiment:565087:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  GButton.useRoundCorners(false);
  G4P.setDisplayFont("Arial", G4P.PLAIN, 14);
  G4P.setInputFont("Arial", G4P.PLAIN, 14);
  G4P.setSliderFont("Arial", G4P.PLAIN, 14);
  surface.setTitle("Haptic Mice Controller");
  dropList1 = new GDropList(this, 170, 40, 250, 80, 3, 25);
  dropList1.setItems(Serial.list(), 0);
  btn_newExperiment = new GButton(this, 300, 130, 120, 30);
  btn_newExperiment.setText("New Experiment");
  btn_newExperiment.addEventHandler(this, "btn_newExperiment_click1");
  label1 = new GLabel(this, 30, 40, 140, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Select serial port");
  label1.setOpaque(false);
  lbl_experiment_name = new GLabel(this, 40, 80, 130, 20);
  lbl_experiment_name.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_experiment_name.setText("Experiment name");
  lbl_experiment_name.setOpaque(false);
  fld_experiment_name = new GTextField(this, 170, 80, 250, 20, G4P.SCROLLBARS_NONE);
  fld_experiment_name.setPromptText("Set experiment name");
  fld_experiment_name.setOpaque(true);
  btn_open_experiments = new GButton(this, 30, 130, 110, 30);
  btn_open_experiments.setText("Open folder...");
  btn_open_experiments.addEventHandler(this, "btn_open_experiments_click1");
  wnd_experiment_basic = GWindow.getWindow(this, "Basic experiment", 0, 0, 390, 200, JAVA2D);
  wnd_experiment_basic.noLoop();
  wnd_experiment_basic.setActionOnClose(G4P.CLOSE_WINDOW);
  wnd_experiment_basic.addDrawHandler(this, "win_draw1");
  btn_fill = new GButton(wnd_experiment_basic, 10, 140, 80, 30);
  btn_fill.setText("Fill");
  btn_fill.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  btn_fill.addEventHandler(this, "bt_fill_click1");
  fld_freq1 = new GTextField(wnd_experiment_basic, 140, 10, 60, 20, G4P.SCROLLBARS_NONE);
  fld_freq1.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  fld_freq1.setOpaque(true);
  lbl_freq1 = new GLabel(wnd_experiment_basic, 10, 10, 130, 20);
  lbl_freq1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_freq1.setText("Frequency 1 (Hz)");
  lbl_freq1.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  lbl_freq1.setOpaque(false);
  lbl_freq2 = new GLabel(wnd_experiment_basic, 10, 70, 130, 20);
  lbl_freq2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_freq2.setText("Frequency 2 (Hz)");
  lbl_freq2.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  lbl_freq2.setOpaque(false);
  fld_freq2 = new GTextField(wnd_experiment_basic, 140, 70, 60, 20, G4P.SCROLLBARS_NONE);
  fld_freq2.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  fld_freq2.setOpaque(true);
  btn_runExperiment = new GButton(wnd_experiment_basic, 180, 140, 200, 30);
  btn_runExperiment.setText("Run experiment!");
  btn_runExperiment.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  btn_runExperiment.addEventHandler(this, "btn_runExperiment_click");
  lbl_interval = new GLabel(wnd_experiment_basic, 10, 40, 120, 20);
  lbl_interval.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_interval.setText("Interval (s)");
  lbl_interval.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  lbl_interval.setOpaque(false);
  fld_interval = new GTextField(wnd_experiment_basic, 140, 40, 60, 20, G4P.SCROLLBARS_NONE);
  fld_interval.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  fld_interval.setOpaque(true);
  lbl_time1 = new GLabel(wnd_experiment_basic, 240, 10, 80, 20);
  lbl_time1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_time1.setText("Time 1 (s)");
  lbl_time1.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  lbl_time1.setOpaque(false);
  fld_time1 = new GTextField(wnd_experiment_basic, 320, 10, 60, 20, G4P.SCROLLBARS_NONE);
  fld_time1.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  fld_time1.setOpaque(true);
  lbl_time2 = new GLabel(wnd_experiment_basic, 240, 40, 80, 20);
  lbl_time2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_time2.setText("Time 2 (s)");
  lbl_time2.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  lbl_time2.setOpaque(false);
  fld_time2 = new GTextField(wnd_experiment_basic, 320, 40, 60, 20, G4P.SCROLLBARS_NONE);
  fld_time2.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  fld_time2.setOpaque(true);
  lbl_timeout = new GLabel(wnd_experiment_basic, 10, 100, 120, 20);
  lbl_timeout.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_timeout.setText("Timeout (s)");
  lbl_timeout.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  lbl_timeout.setOpaque(false);
  fld_timeout = new GTextField(wnd_experiment_basic, 130, 100, 60, 20, G4P.SCROLLBARS_NONE);
  fld_timeout.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  fld_timeout.setOpaque(true);
  wnd_experiment_basic.loop();
}

// Variable declarations 
// autogenerated do not edit
GDropList dropList1; 
GButton btn_newExperiment; 
GLabel label1; 
GLabel lbl_experiment_name; 
GTextField fld_experiment_name; 
GButton btn_open_experiments; 
GWindow wnd_experiment_basic;
GButton btn_fill; 
GTextField fld_freq1; 
GLabel lbl_freq1; 
GLabel lbl_freq2; 
GTextField fld_freq2; 
GButton btn_runExperiment; 
GLabel lbl_interval; 
GTextField fld_interval; 
GLabel lbl_time1; 
GTextField fld_time1; 
GLabel lbl_time2; 
GTextField fld_time2; 
GLabel lbl_timeout; 
GTextField fld_timeout; 
