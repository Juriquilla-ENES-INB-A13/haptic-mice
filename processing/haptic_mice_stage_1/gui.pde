/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void bt_start_click1(GButton source, GEvent event) { //_CODE_:btn_start:305998:
  println("btn_start - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:btn_start:305998:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Haptic mice - stage 1");
  lbl_freq = new GLabel(this, 120, 30, 80, 20);
  lbl_freq.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_freq.setText("Frequency");
  lbl_freq.setOpaque(false);
  fld_freq = new GTextField(this, 200, 30, 109, 20, G4P.SCROLLBARS_NONE);
  fld_freq.setOpaque(true);
  lbl_duration = new GLabel(this, 120, 70, 80, 20);
  lbl_duration.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_duration.setText("Duration (s)");
  lbl_duration.setOpaque(false);
  fld_stim_duration = new GTextField(this, 200, 70, 110, 20, G4P.SCROLLBARS_NONE);
  fld_stim_duration.setOpaque(true);
  txt_wait_time = new GLabel(this, 110, 110, 90, 20);
  txt_wait_time.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  txt_wait_time.setText("Wait time (s)");
  txt_wait_time.setOpaque(false);
  fld_wait = new GTextField(this, 200, 110, 110, 20, G4P.SCROLLBARS_NONE);
  fld_wait.setOpaque(true);
  lbl_repeats = new GLabel(this, 90, 150, 110, 20);
  lbl_repeats.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_repeats.setText("Repeats (times)");
  lbl_repeats.setOpaque(false);
  fld_time_repeats = new GTextField(this, 200, 190, 110, 20, G4P.SCROLLBARS_NONE);
  fld_time_repeats.setOpaque(true);
  lbl_time_between_repeats = new GLabel(this, 20, 190, 180, 20);
  lbl_time_between_repeats.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_time_between_repeats.setText("Time between repeats (s)");
  lbl_time_between_repeats.setOpaque(false);
  fld_repeats = new GTextField(this, 200, 150, 110, 20, G4P.SCROLLBARS_NONE);
  fld_repeats.setOpaque(true);
  btn_start = new GButton(this, 160, 240, 80, 30);
  btn_start.setText("Start!");
  btn_start.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  btn_start.addEventHandler(this, "bt_start_click1");
}

// Variable declarations 
// autogenerated do not edit
GLabel lbl_freq; 
GTextField fld_freq; 
GLabel lbl_duration; 
GTextField fld_stim_duration; 
GLabel txt_wait_time; 
GTextField fld_wait; 
GLabel lbl_repeats; 
GTextField fld_time_repeats; 
GLabel lbl_time_between_repeats; 
GTextField fld_repeats; 
GButton btn_start; 
