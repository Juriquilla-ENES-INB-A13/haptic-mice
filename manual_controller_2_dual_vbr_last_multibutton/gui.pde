/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void fillL_click(GButton source, GEvent event) { //_CODE_:btn_fillL:241519:
  thread("fillL");
} //_CODE_:btn_fillL:241519:

public void start_click1(GButton source, GEvent event) { //_CODE_:btn_start:428180:
  if(checkFields()&& !runExperiment){
    btn_start.setVisible(false);
    btn_stop.setVisible(true);
    thread("startExperiment");
  }
} //_CODE_:btn_start:428180:

public void open_click(GButton source, GEvent event) { //_CODE_:btn_open:719474:
  openDataFolder();
} //_CODE_:btn_open:719474:

public void setPort_click(GButton source, GEvent event) { //_CODE_:btn_setPort:396596:
  setArduino();
} //_CODE_:btn_setPort:396596:

public void feedL_click(GButton source, GEvent event) { //_CODE_:btn_feedL:628575:
thread("feedL");
} //_CODE_:btn_feedL:628575:

public void stop_click(GButton source, GEvent event) { //_CODE_:btn_stop:242696:
  stopExperiment();
  btn_start.setVisible(true);
    btn_stop.setVisible(false);
} //_CODE_:btn_stop:242696:

public void btnOpenDoor_click(GButton source, GEvent event) { //_CODE_:btnOpenDoor:840315:
  thread("openDoor");
} //_CODE_:btnOpenDoor:840315:

public void btnCloseDoor_click(GButton source, GEvent event) { //_CODE_:btnCloseDoor:683991:
  thread("closeDoor");
} //_CODE_:btnCloseDoor:683991:

public void fillR_click(GButton source, GEvent event) { //_CODE_:btnFillR:945828:
  thread("fillR");
} //_CODE_:btnFillR:945828:

public void feedR_click(GButton source, GEvent event) { //_CODE_:btnFeedR:584142:
  thread("feedR");
} //_CODE_:btnFeedR:584142:

public void btn_1_click(GButton source, GEvent event) { //_CODE_:btn_1:801185:
  freq=freqList[0];
  thread("vibrate");
} //_CODE_:btn_1:801185:

public void btn_2_click(GButton source, GEvent event) { //_CODE_:btn_2:493326:
  freq=freqList[1];
  thread("vibrate");
} //_CODE_:btn_2:493326:

public void btn_3_clk(GButton source, GEvent event) { //_CODE_:btn_3:987987:
    freq=freqList[2];
    thread("vibrate");
} //_CODE_:btn_3:987987:

public void btn_4_clk(GButton source, GEvent event) { //_CODE_:btn_4:844945:
  freq=freqList[3];
  thread("vibrate");
} //_CODE_:btn_4:844945:

public void btn_5_clk(GButton source, GEvent event) { //_CODE_:btn_5:698139:
   freq=freqList[4];
  thread("vibrate");
} //_CODE_:btn_5:698139:

public void btn_6_clk(GButton source, GEvent event) { //_CODE_:btn_6:226021:
  freq=freqList[5];
  thread("vibrate");
} //_CODE_:btn_6:226021:

public void btn_7_clk(GButton source, GEvent event) { //_CODE_:btn_7:691473:
  freq=freqList[6];
  thread("vibrate");
} //_CODE_:btn_7:691473:

public void btn_8_clk(GButton source, GEvent event) { //_CODE_:btn_8:321568:
  freq=freqList[7];
  thread("vibrate");
} //_CODE_:btn_8:321568:

public void btn_9_click(GButton source, GEvent event) { //_CODE_:btn_9:724175:
  freq=freqList[8];
  thread("vibrate");
} //_CODE_:btn_9:724175:

public void btn_10_click(GButton source, GEvent event) { //_CODE_:btn_10:577818:
  freq=freqList[9];
  thread("vibrate");
} //_CODE_:btn_10:577818:

public void btn_11_click(GButton source, GEvent event) { //_CODE_:btn_11:329516:
  freq=freqList[10];
  thread("vibrate");
} //_CODE_:btn_11:329516:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Haptic Mice -  Dual Manual Stage Vibration");
  lbl_experiment_name = new GLabel(this, 40, 300, 140, 20);
  lbl_experiment_name.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  lbl_experiment_name.setText("Experiment name:");
  lbl_experiment_name.setOpaque(false);
  fld_name = new GTextField(this, 180, 300, 90, 20, G4P.SCROLLBARS_NONE);
  fld_name.setOpaque(true);
  btn_fillL = new GButton(this, 340, 200, 80, 30);
  btn_fillL.setText("Fill L");
  btn_fillL.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  btn_fillL.addEventHandler(this, "fillL_click");
  btn_start = new GButton(this, 40, 360, 80, 30);
  btn_start.setText("Start");
  btn_start.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  btn_start.addEventHandler(this, "start_click1");
  btn_open = new GButton(this, 380, 560, 140, 30);
  btn_open.setText("Open data folder");
  btn_open.addEventHandler(this, "open_click");
  lst_port = new GDropList(this, 180, 20, 110, 80, 3, 10);
  lst_port.setItems(Arduino.list(), 0);
  lbl_port = new GLabel(this, 100, 20, 80, 20);
  lbl_port.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  lbl_port.setText("port:");
  lbl_port.setOpaque(false);
  btn_setPort = new GButton(this, 300, 20, 80, 20);
  btn_setPort.setText("Open");
  btn_setPort.addEventHandler(this, "setPort_click");
  lbl_connected = new GLabel(this, 410, 20, 160, 20);
  lbl_connected.setText("disconnected");
  lbl_connected.setOpaque(false);
  btn_feedL = new GButton(this, 340, 240, 80, 30);
  btn_feedL.setText("Feed L");
  btn_feedL.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  btn_feedL.addEventHandler(this, "feedL_click");
  btn_stop = new GButton(this, 180, 360, 80, 30);
  btn_stop.setText("stop!");
  btn_stop.setLocalColorScheme(GCScheme.RED_SCHEME);
  btn_stop.addEventHandler(this, "stop_click");
  fld_feed_l = new GTextField(this, 380, 160, 50, 20, G4P.SCROLLBARS_NONE);
  fld_feed_l.setText("1");
  fld_feed_l.setOpaque(true);
  lbl_feed_l = new GLabel(this, 340, 160, 40, 20);
  lbl_feed_l.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  lbl_feed_l.setText("L:");
  lbl_feed_l.setOpaque(false);
  lbl_feed_r = new GLabel(this, 470, 160, 40, 20);
  lbl_feed_r.setTextAlign(GAlign.RIGHT, GAlign.MIDDLE);
  lbl_feed_r.setText("R:");
  lbl_feed_r.setOpaque(false);
  fld_feed_r = new GTextField(this, 510, 160, 50, 20, G4P.SCROLLBARS_NONE);
  fld_feed_r.setText("1");
  fld_feed_r.setOpaque(true);
  fld_wait_to_feed = new GTextField(this, 480, 130, 50, 20, G4P.SCROLLBARS_NONE);
  fld_wait_to_feed.setOpaque(true);
  lbl_delay_feed = new GLabel(this, 340, 130, 140, 20);
  lbl_delay_feed.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_delay_feed.setText("delay to feed (ms)");
  lbl_delay_feed.setOpaque(false);
  lbl_pump_pulse = new GLabel(this, 340, 100, 110, 20);
  lbl_pump_pulse.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lbl_pump_pulse.setText("Pump pulse (ms)");
  lbl_pump_pulse.setOpaque(false);
  fld_pump_pulse = new GTextField(this, 450, 100, 60, 20, G4P.SCROLLBARS_NONE);
  fld_pump_pulse.setOpaque(true);
  lblVibrDur = new GLabel(this, 40, 50, 160, 20);
  lblVibrDur.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lblVibrDur.setText("Vibration duration (ms)");
  lblVibrDur.setOpaque(false);
  fldVibrDur = new GTextField(this, 200, 50, 60, 20, G4P.SCROLLBARS_NONE);
  fldVibrDur.setOpaque(true);
  btnOpenDoor = new GButton(this, 340, 280, 80, 30);
  btnOpenDoor.setText("Open door");
  btnOpenDoor.addEventHandler(this, "btnOpenDoor_click");
  btnCloseDoor = new GButton(this, 480, 280, 80, 30);
  btnCloseDoor.setText("Close door");
  btnCloseDoor.addEventHandler(this, "btnCloseDoor_click");
  btnFillR = new GButton(this, 480, 200, 80, 30);
  btnFillR.setText("Fill R");
  btnFillR.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  btnFillR.addEventHandler(this, "fillR_click");
  btnFeedR = new GButton(this, 480, 240, 80, 30);
  btnFeedR.setText("Feed R");
  btnFeedR.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  btnFeedR.addEventHandler(this, "feedR_click");
  sldPower = new GCustomSlider(this, 340, 40, 230, 60, "grey_blue");
  sldPower.setShowValue(true);
  sldPower.setShowLimits(true);
  sldPower.setLimits(100, 0, 100);
  sldPower.setShowTicks(true);
  sldPower.setNumberFormat(G4P.INTEGER, 0);
  sldPower.setOpaque(false);
  btn_1 = new GButton(this, 270, 320, 80, 30);
  btn_1.setText("...");
  btn_1.addEventHandler(this, "btn_1_click");
  btn_2 = new GButton(this, 360, 320, 80, 30);
  btn_2.setText("...");
  btn_2.addEventHandler(this, "btn_2_click");
  btn_3 = new GButton(this, 450, 320, 80, 30);
  btn_3.setText("...");
  btn_3.addEventHandler(this, "btn_3_clk");
  btn_4 = new GButton(this, 540, 320, 80, 30);
  btn_4.setText("...");
  btn_4.addEventHandler(this, "btn_4_clk");
  btn_5 = new GButton(this, 270, 360, 80, 30);
  btn_5.setText("...");
  btn_5.addEventHandler(this, "btn_5_clk");
  btn_6 = new GButton(this, 360, 360, 80, 30);
  btn_6.setText("...");
  btn_6.addEventHandler(this, "btn_6_clk");
  btn_7 = new GButton(this, 450, 360, 80, 30);
  btn_7.setText("...");
  btn_7.addEventHandler(this, "btn_7_clk");
  btn_8 = new GButton(this, 540, 360, 80, 30);
  btn_8.setText("...");
  btn_8.addEventHandler(this, "btn_8_clk");
  btn_9 = new GButton(this, 270, 400, 80, 30);
  btn_9.setText("...");
  btn_9.addEventHandler(this, "btn_9_click");
  btn_10 = new GButton(this, 360, 400, 80, 30);
  btn_10.setText("...");
  btn_10.addEventHandler(this, "btn_10_click");
  btn_11 = new GButton(this, 450, 400, 80, 30);
  btn_11.setText("...");
  btn_11.addEventHandler(this, "btn_11_click");
}

// Variable declarations 
// autogenerated do not edit
GLabel lbl_experiment_name; 
GTextField fld_name; 
GButton btn_fillL; 
GButton btn_start; 
GButton btn_open; 
GDropList lst_port; 
GLabel lbl_port; 
GButton btn_setPort; 
GLabel lbl_connected; 
GButton btn_feedL; 
GButton btn_stop; 
GTextField fld_feed_l; 
GLabel lbl_feed_l; 
GLabel lbl_feed_r; 
GTextField fld_feed_r; 
GTextField fld_wait_to_feed; 
GLabel lbl_delay_feed; 
GLabel lbl_pump_pulse; 
GTextField fld_pump_pulse; 
GLabel lblVibrDur; 
GTextField fldVibrDur; 
GButton btnOpenDoor; 
GButton btnCloseDoor; 
GButton btnFillR; 
GButton btnFeedR; 
GCustomSlider sldPower; 
GButton btn_1; 
GButton btn_2; 
GButton btn_3; 
GButton btn_4; 
GButton btn_5; 
GButton btn_6; 
GButton btn_7; 
GButton btn_8; 
GButton btn_9; 
GButton btn_10; 
GButton btn_11; 
